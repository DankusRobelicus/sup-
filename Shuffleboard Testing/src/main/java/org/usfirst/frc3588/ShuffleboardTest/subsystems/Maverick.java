// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3588.ShuffleboardTest.subsystems;


import org.usfirst.frc3588.ShuffleboardTest.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.DigitalInput;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Maverick extends Subsystem {

    public final double TIME=8.0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private DigitalInput armLimitSwitch;
    private DigitalInput cargoLimitSwitch;
    private DigitalInput hatchLimitSwitch;
    private AnalogInput distanceInfraredSensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public Maverick() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        armLimitSwitch = new DigitalInput(0);
        addChild("armLimitSwitch",armLimitSwitch);
        
        
        cargoLimitSwitch = new DigitalInput(1);
        addChild("cargoLimitSwitch",cargoLimitSwitch);
        
        
        hatchLimitSwitch = new DigitalInput(2);
        addChild("hatchLimitSwitch",hatchLimitSwitch);
        
        
        distanceInfraredSensor = new AnalogInput(1);
        addChild("distanceInfraredSensor",distanceInfraredSensor);
        
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public boolean isArmLimitSwitch(){
        return armLimitSwitch.get();
    }
    public boolean isCargoLimitSwitch(){
        return cargoLimitSwitch.get();
    }
    public boolean isHatchLimitSwitch(){
        return hatchLimitSwitch.get();
    }
    public double getDistanceInfraredSensor(){
        return distanceInfraredSensor.getVoltage();
    }

}

